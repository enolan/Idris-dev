cache:
    - C:\Users\appveyor\AppData\Roaming\stack\snapshots\
# Building the dependencies alone takes ~38 minutes and AppVeyor's limit is an
# hour. So we split into two jobs - the one that only builds dependencies almost
# always succeeds and populates the cache, giving the full build plenty of time
# to complete.
environment:
    matrix:
        - ACTUALLY_BUILD: "false"
        - ACTUALLY_BUILD: "true"
install:
    - appveyor-retry curl -ostack.zip -L --insecure http://www.stackage.org/stack/windows-x86_64
    - 7z x stack.zip stack.exe
    # stack setup gives ~20k lines of ouput, so we redirect to null. Need to
    # call cmd inside retry for the redirect.
    - appveyor-retry cmd /C "stack setup > nul"
    - appveyor-retry stack exec pacman -- -Sy --noconfirm --noprogressbar
    - appveyor-retry stack exec pacman -- -S --needed --noconfirm --noprogressbar mingw-w64-x86_64-libffi mingw-w64-x86_64-pkg-config make
build_script:
    - SET PATH=%PATH%;C:\Users\appveyor\AppData\Local\Programs\stack\x86_64-windows\msys2-20150512\mingw64\bin
    # Network fails to build for some reason without the echo "" | thing
    # AppVeyor eats all the newlines in multiline scripts, hence the &s.
    # I'd like to use appveyor-retry to download the dependencies and only try
    # to build them once, but there's a bug in Stack that makes it hang a good
    # portion of the time, so we use appveyor-retry on the whole thing.
    # https://github.com/commercialhaskell/stack/issues/1689
    - IF "%ACTUALLY_BUILD%" == "true" (
            echo "Full build..." &
            appveyor-retry cmd /c "echo "" | stack build --flag idris:FFI --only-dependencies" &
            stack build --flag idris:FFI
      ) ELSE (
            echo "Populating cache..." &
            appveyor-retry cmd /c "echo "" | stack build --flag idris:FFI --only-snapshot"
      )
platform: x64

test_script:
    - IF "%ACTUALLY_BUILD%" == "true" (
            stack exec make -- test_c
      )